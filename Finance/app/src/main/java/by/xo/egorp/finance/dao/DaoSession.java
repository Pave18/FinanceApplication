package by.xo.egorp.finance.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import by.xo.egorp.finance.dao.WalletIcon;
import by.xo.egorp.finance.dao.Currency;
import by.xo.egorp.finance.dao.Wallet;
import by.xo.egorp.finance.dao.CategoryIcon;
import by.xo.egorp.finance.dao.Subcategory;
import by.xo.egorp.finance.dao.Category;
import by.xo.egorp.finance.dao.FinanceTransaction;

import by.xo.egorp.finance.dao.WalletIconDao;
import by.xo.egorp.finance.dao.CurrencyDao;
import by.xo.egorp.finance.dao.WalletDao;
import by.xo.egorp.finance.dao.CategoryIconDao;
import by.xo.egorp.finance.dao.SubcategoryDao;
import by.xo.egorp.finance.dao.CategoryDao;
import by.xo.egorp.finance.dao.FinanceTransactionDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig walletIconDaoConfig;
    private final DaoConfig currencyDaoConfig;
    private final DaoConfig walletDaoConfig;
    private final DaoConfig categoryIconDaoConfig;
    private final DaoConfig subcategoryDaoConfig;
    private final DaoConfig categoryDaoConfig;
    private final DaoConfig financeTransactionDaoConfig;

    private final WalletIconDao walletIconDao;
    private final CurrencyDao currencyDao;
    private final WalletDao walletDao;
    private final CategoryIconDao categoryIconDao;
    private final SubcategoryDao subcategoryDao;
    private final CategoryDao categoryDao;
    private final FinanceTransactionDao financeTransactionDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        walletIconDaoConfig = daoConfigMap.get(WalletIconDao.class).clone();
        walletIconDaoConfig.initIdentityScope(type);

        currencyDaoConfig = daoConfigMap.get(CurrencyDao.class).clone();
        currencyDaoConfig.initIdentityScope(type);

        walletDaoConfig = daoConfigMap.get(WalletDao.class).clone();
        walletDaoConfig.initIdentityScope(type);

        categoryIconDaoConfig = daoConfigMap.get(CategoryIconDao.class).clone();
        categoryIconDaoConfig.initIdentityScope(type);

        subcategoryDaoConfig = daoConfigMap.get(SubcategoryDao.class).clone();
        subcategoryDaoConfig.initIdentityScope(type);

        categoryDaoConfig = daoConfigMap.get(CategoryDao.class).clone();
        categoryDaoConfig.initIdentityScope(type);

        financeTransactionDaoConfig = daoConfigMap.get(FinanceTransactionDao.class).clone();
        financeTransactionDaoConfig.initIdentityScope(type);

        walletIconDao = new WalletIconDao(walletIconDaoConfig, this);
        currencyDao = new CurrencyDao(currencyDaoConfig, this);
        walletDao = new WalletDao(walletDaoConfig, this);
        categoryIconDao = new CategoryIconDao(categoryIconDaoConfig, this);
        subcategoryDao = new SubcategoryDao(subcategoryDaoConfig, this);
        categoryDao = new CategoryDao(categoryDaoConfig, this);
        financeTransactionDao = new FinanceTransactionDao(financeTransactionDaoConfig, this);

        registerDao(WalletIcon.class, walletIconDao);
        registerDao(Currency.class, currencyDao);
        registerDao(Wallet.class, walletDao);
        registerDao(CategoryIcon.class, categoryIconDao);
        registerDao(Subcategory.class, subcategoryDao);
        registerDao(Category.class, categoryDao);
        registerDao(FinanceTransaction.class, financeTransactionDao);
    }
    
    public void clear() {
        walletIconDaoConfig.clearIdentityScope();
        currencyDaoConfig.clearIdentityScope();
        walletDaoConfig.clearIdentityScope();
        categoryIconDaoConfig.clearIdentityScope();
        subcategoryDaoConfig.clearIdentityScope();
        categoryDaoConfig.clearIdentityScope();
        financeTransactionDaoConfig.clearIdentityScope();
    }

    public WalletIconDao getWalletIconDao() {
        return walletIconDao;
    }

    public CurrencyDao getCurrencyDao() {
        return currencyDao;
    }

    public WalletDao getWalletDao() {
        return walletDao;
    }

    public CategoryIconDao getCategoryIconDao() {
        return categoryIconDao;
    }

    public SubcategoryDao getSubcategoryDao() {
        return subcategoryDao;
    }

    public CategoryDao getCategoryDao() {
        return categoryDao;
    }

    public FinanceTransactionDao getFinanceTransactionDao() {
        return financeTransactionDao;
    }

}
